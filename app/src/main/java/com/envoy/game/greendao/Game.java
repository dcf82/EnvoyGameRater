package com.envoy.game.greendao;

import com.envoy.game.greendao.DaoSession;
import de.greenrobot.dao.DaoException;

// THIS CODE IS GENERATED BY greenDAO, EDIT ONLY INSIDE THE "KEEP"-SECTIONS

// KEEP INCLUDES - put your custom includes here
// KEEP INCLUDES END
/**
 * Entity mapped to table "GAME".
 */
public class Game {

    private Long id;
    private String mGameName;
    private String mConsoleName;
    private byte[] mGameImage;
    private Boolean mGameFinished;
    private Integer mStarsNumber;

    /** Used to resolve relations */
    private transient DaoSession daoSession;

    /** Used for active entity operations. */
    private transient GameDao myDao;


    // KEEP FIELDS - put your custom fields here
    // KEEP FIELDS END

    public Game() {
    }

    public Game(Long id) {
        this.id = id;
    }

    public Game(Long id, String mGameName, String mConsoleName, byte[] mGameImage, Boolean mGameFinished, Integer mStarsNumber) {
        this.id = id;
        this.mGameName = mGameName;
        this.mConsoleName = mConsoleName;
        this.mGameImage = mGameImage;
        this.mGameFinished = mGameFinished;
        this.mStarsNumber = mStarsNumber;
    }

    /** called by internal mechanisms, do not call yourself. */
    public void __setDaoSession(DaoSession daoSession) {
        this.daoSession = daoSession;
        myDao = daoSession != null ? daoSession.getGameDao() : null;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getMGameName() {
        return mGameName;
    }

    public void setMGameName(String mGameName) {
        this.mGameName = mGameName;
    }

    public String getMConsoleName() {
        return mConsoleName;
    }

    public void setMConsoleName(String mConsoleName) {
        this.mConsoleName = mConsoleName;
    }

    public byte[] getMGameImage() {
        return mGameImage;
    }

    public void setMGameImage(byte[] mGameImage) {
        this.mGameImage = mGameImage;
    }

    public Boolean getMGameFinished() {
        return mGameFinished;
    }

    public void setMGameFinished(Boolean mGameFinished) {
        this.mGameFinished = mGameFinished;
    }

    public Integer getMStarsNumber() {
        return mStarsNumber;
    }

    public void setMStarsNumber(Integer mStarsNumber) {
        this.mStarsNumber = mStarsNumber;
    }

    /** Convenient call for {@link AbstractDao#delete(Object)}. Entity must attached to an entity context. */
    public void delete() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.delete(this);
    }

    /** Convenient call for {@link AbstractDao#update(Object)}. Entity must attached to an entity context. */
    public void update() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.update(this);
    }

    /** Convenient call for {@link AbstractDao#refresh(Object)}. Entity must attached to an entity context. */
    public void refresh() {
        if (myDao == null) {
            throw new DaoException("Entity is detached from DAO context");
        }    
        myDao.refresh(this);
    }

    // KEEP METHODS - put your custom methods here
    // KEEP METHODS END

}
